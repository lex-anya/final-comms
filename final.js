// Code Generated by Sidekick is for learning and experimentation purposes only.

document.addEventListener('DOMContentLoaded', function() {
    console.log('DOM fully loaded and parsed');

    // Check if the user is logged in
    if (!sessionStorage.getItem('loggedIn')) {
        // If not logged in, redirect to the login page
        window.location.href = 'login.html';
        return;
    }

    const unreadTab = document.getElementById('unread-tab');
    const inboxTab = document.getElementById('inbox-tab');
    const unreadList = document.getElementById('unread');
    const inboxList = document.getElementById('inbox');
    const mailPopup = document.getElementById('mail-popup');
    const mailContent = document.getElementById('mail-content');
    const closeBtn = document.querySelector('.close');
    const mail1 = document.getElementById('mail1');
    const mail1Date = document.getElementById('mail1-date');
    const notification = document.getElementById('notification');
    const notificationOpen = document.querySelector('.notification-open');
    const notificationClose = document.querySelector('.notification-close');
    const dateTimeElement = document.getElementById('date-time');
    const userInfo = document.getElementById('user-info');

    let inboxEnabled = false; // Variable to track if the Inbox tab can be navigated to

    // Retrieve the Agent ID from session storage and update the user info
    const agentId = sessionStorage.getItem('agentId');
    if (agentId) {
        userInfo.textContent = `User: ${agentId}.astralis@paradox-initiative.org`;
    }

    // Function to show the unread list
    unreadTab.addEventListener('click', function() {
        console.log('Unread tab clicked');
        unreadList.classList.add('active');
        inboxList.classList.remove('active');
        unreadTab.classList.add('active');
        inboxTab.classList.remove('active');
    });

    // Function to show the inbox list
    inboxTab.addEventListener('click', function() {
        console.log('Inbox tab clicked');
        if (inboxEnabled) {
            inboxList.classList.add('active');
            unreadList.classList.remove('active');
            inboxTab.classList.add('active');
            unreadTab.classList.remove('active');
        }
    });

    // Function to open the mail popup
    function openMailPopup(subject, date, from, to, priority, body) {
        console.log('openMailPopup called with:', { subject, date, from, to, priority, body });
        document.getElementById('email-subject').textContent = subject;
        document.getElementById('email-date').textContent = `Date: ${date}`;
        document.getElementById('email-from').textContent = from;
        document.getElementById('email-to').textContent = to;
        document.getElementById('email-priority').textContent = priority;
        document.getElementById('email-body').innerHTML = body;
        mailPopup.style.display = 'flex';
    }

    // Function to get current date in UTC
    function getCurrentDateUTC() {
        const now = new Date();
        const day = now.getUTCDate().toString().padStart(2, '0');
        const month = (now.getUTCMonth() + 1).toString().padStart(2, '0'); // Months are zero-based
        const year = now.getUTCFullYear();
        const dayOfWeek = now.getUTCDay(); // Get the day of the week (0-6)
        const daysOfWeek = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
        const dayOfWeekName = daysOfWeek[dayOfWeek];
        return `${day}/${month}/${year}/${dayOfWeekName}`;
    }

    // Function to get day of the week in 2031
    function getDayOfWeekIn2031() {
        // Get the current date
        const currentDay = getCurrentDateUTC().split('/').slice(0, 1);
        const currentMonth = getCurrentDateUTC().split('/').slice(1, 2); // Note: Months are zero-based (0 = January, 11 = December)
    
        // Create a new date object for the same day and month in the year 2031
        const futureDate = new Date(Date.UTC(2031, currentMonth, currentDay));
    
        // Get the day of the week for the future date
        const dayOfWeek = futureDate.getUTCDay(); // Get the day of the week (0-6)
        const daysOfWeek = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
        const dayOfWeekName = daysOfWeek[dayOfWeek];
    
        return dayOfWeekName;
    }

    // Set the date for the first email in the Unread folder
    mail1Date.textContent = `${getCurrentDateUTC().split('/').slice(0, 2).join('/')}/2031`;

    // Function to handle the first mail click
    mail1.addEventListener('click', function() {
        console.log('First mail clicked');
        openMailPopup(
            'Before You Go...',
            `${getDayOfWeekIn2031()}, ${getCurrentDateUTC().split('/').slice(0, 1)} ${new Date().toLocaleString('default', { month: 'long' })}, 2031`,
            'ASTRA <astra.astralis@paradox-initiative.org>',
            'Project Astralis - All Team Members <*.astralis@paradox-initiative.org>',
            'HIGH',
            `<div class="email-body"> 
                <p class="email-text"><b>My dear teammates,</b></p>
                <p class="email-text">I shielded you from the world for as long as I could.</p>
                <p class="email-text">But, if this truly is the end,</p>
                <p class="email-text">You deserve to know exactly what's happening.</p>
                <p class="email-text">I wanted to share this article with you because it does more than just report events. It remembers who they are happening to. And why we still hold on.</p>
                <p class="email-text"><a href="https://lex-anya.github.io/global-observer-news-article/" target="_blank">As The Sky Cracks, We Are Not Alone by Ananya Sharma</a></p>
                <p class="email-text"><b>With everything I have left,</b></br>
                <b>Your friend, ASTRA</b></p>
              </div>`    
        );
        // Move mail to inbox after reading
        setTimeout(() => {
            mail1.remove();
            const newMail1 = document.createElement('div');
            newMail1.classList.add('mail-item');
            newMail1.id = 'mail1';
            newMail1.innerHTML = `
                <div class="mail-sender">ASTRA <span class="mail-id">astra.astralis@paradox-initiative.org</span></div>
                <span class="mail-subject">Before You Go...</span>
                <span class="mail-status">Read</span>
                <span class="mail-date">${getCurrentDateUTC().split('/').slice(0, 2).join('/')}/2031</span>
            `;
            inboxList.appendChild(newMail1);
            // Add event listener for the first mail in inbox
            newMail1.addEventListener('click', function() {
                console.log('First mail in inbox clicked');
                openMailPopup(
                    'Before You Go...',
                    `${getDayOfWeekIn2031()}, ${getCurrentDateUTC().split('/').slice(0, 1)} ${new Date().toLocaleString('default', { month: 'long' })}, 2031`,
                    'ASTRA <astra.astralis@paradox-initiative.org>',
                    'Project Astralis - All Team Members <*.astralis@paradox-initiative.org>',
                    'HIGH',
                    `<div class="email-body"> 
                        <p class="email-text"><b>My dear teammates,</b></p>
                        <p class="email-text">I shielded you from the world for as long as I could.</p>
                        <p class="email-text">But, if this truly is the end,</p>
                        <p class="email-text">You deserve to know exactly what's happening.</p>
                        <p class="email-text">I wanted to share this article with you because it does more than just report events. It remembers who they are happening to. And why we still hold on.</p>
                        <p class="email-text"><a href="https://lex-anya.github.io/global-observer-news-article/" target="_blank">As The Sky Cracks, We Are Not Alone by Ananya Sharma</a></p>
                        <p class="email-text"><b>With everything I have left,</b></br>
                        <b>Your friend, ASTRA</b></p>
                    </div>`   
                );
            });
            // Add second email to unread list
            const newMail2 = document.createElement('div');
            newMail2.classList.add('mail-item');
            newMail2.id = 'mail2';
            newMail2.innerHTML = `
                <div class="mail-sender">Paradox Initiative HQ <span class="mail-id">command@paradox-initiative.org</span></div>
                <span class="mail-subject">Our Final Farewell</span>
                <span class="mail-status">New</span>
                <span class="mail-date">${getCurrentDateUTC().split('/').slice(0, 2).join('/')}/2031</span>
            `;
            unreadList.appendChild(newMail2);
            // Show notification for the second email
            notification.style.display = 'block';
            // Add event listener for the second email
            newMail2.addEventListener('click', function() {
                console.log('Second mail clicked');
                openMailPopup(
                    'Our Final Farewell',
                    `${getDayOfWeekIn2031()}, ${getCurrentDateUTC().split('/').slice(0, 1)} ${new Date().toLocaleString('default', { month: 'long' })}, 2031`,
                    'Paradox Initiative HQ <command@paradox-initiative.org>',
                    'Project Astralis - All Team Members <*.astralis@paradox-initiative.org>',
                    'HIGH',
                    `<div class="email-body">
                        <p class="email-text"><b>Dear Astralis,</b></p>
                        <p class="email-text">If you're reading this, it means you're safe. Well - as safe as anyone can be in a time like this. We're sorry we weren't able to reach you sooner.</p>
                        <p class="email-text">We tried. We truly did. But something kept us from finding you. Signals disappeared. Coordinates never matched. It was as if... something didn't want you to be found.</br>
                        And all the while, the Aster only grew more unstable. More violent. We were helpless against it. And for that we're sorry. To you, and to the world.</p>
                        <p class="email-text">But we still have something to be grateful for. Your effort gave us thirty more years.</br>
                        Thirty years of birthdays, and books, and songs. Of laughter, of quiet dinners, of life.</br>
                        That time mattered. It was everything.</p>
                        <p class="email-text">Now, we're down to the last few hours. Everyone who's left has gathered at Paradox HQ. Families, old friends, people who want to remember the world as it was. We're staying together until the the very end.</p>
                        <p class="email-text">If you see this - please join us.</br>
                        You shouldn't have to face the end alone.</p>
                        <p class="email-text"><b>Hoping to see you one last time, before the final star falls.</b></p>
                        <p class="email-text"><b> - All of us at Paradox</b><p>
                    </div>`
                );
                // Move mail to inbox after reading
                setTimeout(() => {
                    newMail2.remove();
                    const newMail2Inbox = document.createElement('div');
                    newMail2Inbox.classList.add('mail-item');
                    newMail2Inbox.id = 'mail2';
                    newMail2Inbox.innerHTML = `
                        <div class="mail-sender">Paradox Initiative HQ <span class="mail-id">command@paradox-initiative.org</span></div>
                        <span class="mail-subject">Our Final Farewell</span>
                        <span class="mail-status">Read</span>
                        <span class="mail-date">${getCurrentDateUTC().split('/').slice(0, 2).join('/')}/2031</span>
                    `;
                    inboxList.appendChild(newMail2Inbox);
                    // Add event listener for the second mail in inbox
                    newMail2Inbox.addEventListener('click', function() {
                        console.log('Second mail in inbox clicked');
                        openMailPopup(
                            'Our Final Farewell',
                            `${getDayOfWeekIn2031()}, ${getCurrentDateUTC().split('/').slice(0, 1)} ${new Date().toLocaleString('default', { month: 'long' })}, 2031`,
                            'Paradox Initiative HQ <command@paradox-initiative.org>',
                            'Project Astralis - All Team Members <*.astralis@paradox-initiative.org>',
                            'HIGH',
                            `<div class="email-body">
                                <p class="email-text"><b>Dear Astralis,</b></p>
                                <p class="email-text">If you're reading this, it means you're safe. Well - as safe as anyone can be in a time like this. We're sorry we weren't able to reach you sooner.</p>
                                <p class="email-text">We tried. We truly did. But something kept us from finding you. Signals disappeared. Coordinates never matched. It was as if... something didn't want you to be found.</br>
                                And all the while, the Aster only grew more unstable. More violent. We were helpless against it. And for that we're sorry. To you, and to the world.</p>
                                <p class="email-text">But we still have something to be grateful for. Your effort gave us thirty more years.</br>
                                Thirty years of birthdays, and books, and songs. Of laughter, of quiet dinners, of life.</br>
                                That time mattered. It was everything.</p>
                                <p class="email-text">Now, we're down to the last few hours. Everyone who's left has gathered at Paradox HQ. Families, old friends, people who want to remember the world as it was. We're staying together until the the very end.</p>
                                <p class="email-text">If you see this - please join us.</br>
                                You shouldn't have to face the end alone.</p>
                                <p class="email-text"><b>Hoping to see you one last time, before the final star falls.</b></p>
                                <p class="email-text"><b> - All of us at Paradox</b><p>
                            </div>`
                        );
                    });
                    // Enable the Inbox tab after both mails are read
                    inboxEnabled = true;
                }, 500);
                // Hide notification when the second mail is opened from unread
                notification.style.display = 'none';
            });
        }, 500);
    });

    // Function to close the mail popup
    closeBtn.addEventListener('click', function() {
        console.log('Close button clicked');
        mailPopup.style.display = 'none';
    });

    // Close the modal if the user clicks outside of it
    window.addEventListener('click', function(event) {
        if (event.target == mailPopup) {
            console.log('Clicked outside modal');
            mailPopup.style.display = 'none';
        }
    });

    // Function to handle notification open click
    notificationOpen.addEventListener('click', function() {
        console.log('Notification open clicked');
        document.getElementById('mail2').click();
        notification.style.display = 'none';
    });

    // Function to handle notification close click
    notificationClose.addEventListener('click', function() {
        console.log('Notification close clicked');
        notification.style.display = 'none';
    });

    // Function to update date and time
    function updateDateTime() {
        const now = new Date();
        const year = now.getUTCFullYear();
        const month = now.toLocaleString('default', { month: 'long' });
        const day = now.getUTCDate();
        const hours = now.getUTCHours().toString().padStart(2, '0');
        const minutes = now.getUTCMinutes().toString().padStart(2, '0');
        const seconds = now.getUTCSeconds().toString().padStart(2, '0');
        const dayOfWeek = now.getUTCDay(); // Get the day of the week (0-6)
        const daysOfWeek = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
        const dayOfWeekName = daysOfWeek[dayOfWeek];
        dateTimeElement.textContent = `${dayOfWeekName}, ${day} ${month} ${year}, ${hours}:${minutes}:${seconds} UTC`;
    }

    // Update date and time every second
    setInterval(updateDateTime, 1000);
    updateDateTime(); // Initial call to set the date and time immediately
});